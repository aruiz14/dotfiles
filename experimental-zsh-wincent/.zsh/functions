# Until .agrc exists...
# (https://github.com/ggreer/the_silver_searcher/pull/709)
function ag() {
  emulate -L zsh

  # italic blue paths, pink line numbers, underlined purple matches
  command ag --pager="less -iFMRSX" --color-path=34\;3 --color-line-number=35 --color-match=35\;1\;4 "$@"
}

function history() {
  emulate -L zsh

  # This is a function because Zsh aliases can't take arguments.
  local DEFAULT=-1000
  builtin history ${1:-$DEFAULT}
}

function mosh() {
  emulate -L zsh

  if [[ -z "$@" ]]; then
    # common case: getting to my workstation
    command mosh -6 sandbox
  else
    command mosh "$@"
  fi
}

function tmux() {
  emulate -L zsh

  # Make sure even pre-existing tmux sessions use the latest SSH_AUTH_SOCK.
  # (Inspired by: https://gist.github.com/lann/6771001)
  local SOCK_SYMLINK=~/.ssh/ssh_auth_sock
  if [ -r "$SSH_AUTH_SOCK" -a ! -L "$SSH_AUTH_SOCK" ]; then
    ln -sf "$SSH_AUTH_SOCK" $SOCK_SYMLINK
  fi

  # If provided with args, pass them through.
  if [[ -n "$@" ]]; then
    env SSH_AUTH_SOCK=$SOCK_SYMLINK tmux "$@"
    return
  fi

  # Attach to existing session, or create one, based on current directory.
  SESSION_NAME=$(basename "$(pwd)")
  env SSH_AUTH_SOCK=$SOCK_SYMLINK tmux new -A -s "$SESSION_NAME"
}

# Bounce the Dock icon, if iTerm does not have focus.
function bounce() {
  if [ -n "$TMUX" ]; then
    print -Pn "\ePtmux;\e\e]1337;RequestAttention=1\a\e\\"
  else
    print -Pn "\e]1337;RequestAttention=1\a"
  fi
}

# Convenience function for jumping to hashed directory aliases
# (ie. `j rn` -> `jump rn` -> `cd ~rn`).
function jump() {
  emulate -L zsh

  if [ $# -eq 0 ]; then
    cd -
  elif [ $# -gt 1 ]; then
    echo "jump: single argument required, got $#"
    return 1
  else
    if [ $(hash -d|cut -d= -f1|grep -c "^$1\$") = 0 ]; then
      # Not in `hash -d`: assume it's just a dir.
      cd $1
    else
      cd ~$1
    fi
  fi
}

function _jump_complete() {
  emulate -L zsh
  local word completions
  word="$1"
  completions="$(hash -d|cut -d= -f1)"
  reply=( "${(ps:\n:)completions}" )
}

# Complete filenames and `hash -d` entries.
compctl -f -K _jump_complete jump

# WriteRoom-style focused workspace.
function wr() {
  emulate -L zsh

  local THRESHOLD=200
  local COLS=$(tput cols)
  if ! tmux has-session -t WriteRoom 2> /dev/null; then
    tmux new-session -d -s WriteRoom -c ~/Documents/Corpus
    # TODO: something less clowny here (want width of created session, not width
    # of current pane).
    if [ "$COLS" -gt "$THRESHOLD" ]; then
      tmux split-window -t WriteRoom -h -p 25
      tmux split-window -t WriteRoom.1 -b -h -p 25
      tmux select-pane -t WriteRoom.1
    fi
    tmux send-keys -t WriteRoom.1 "vim -c CommandT" Enter
  fi
  if [ -z "$TMUX" ]; then
    tmux attach -t WriteRoom
  else
    tmux switch-client -t WriteRoom
  fi
}
