# use vim keybindings in copy mode
setw -g mode-keys vi

# setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection

# Copy mode settings from https://github.com/wincent/wincent/blob/master/roles/dotfiles/files/.tmux.conf
# and Mouse support

# Mouse can be used to select panes, select windows (by clicking on the status
# bar), resize panes. For default bindings see `tmux list-keys`.
set -g mouse on

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
set -w -g wrap-search off

# Stay in copy mode on drag end.
# (Would use `bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X
# stop-selection` but it is a bit glitchy.)
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# Scroll 3 lines at a time instead of default 5; don't extend dragged selections.
bind-key -T copy-mode-vi WheelUpPane send-keys -X clear-selection\; send-keys -X -N 3 scroll-up
bind-key -T copy-mode-vi WheelDownPane send-keys -X clear-selection\; send-keys -X -N 3 scroll-down

# Make double and triple click work outside of copy mode (already works inside it with default bindings).
bind-key -T root DoubleClick1Pane if-shell -Ft{mouse} '#{alternate_on}' "send-keys -M" "copy-mode; send-keys -X select-word"
bind-key -T root TripleClick1Pane if-shell -Ft{mouse} '#{alternate_on}' "send-keys -M" "copy-mode; send-keys -X select-line"

# For those times when C-c and q are not enough.
bind-key -T copy-mode-vi Escape send-keys -X cancel

# Clipper.
bind-key y run-shell "tmux save-buffer - | nc -U ~/.clipper.sock"

# "copy-pipe" requires tmux >= 1.8
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "nc -U ~/.clipper.sock"

# copy with Enter don't copy it in the clipboard
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "nc -U ~/.clipper.sock"

# copy-mode + search shortcut
bind-key / copy-mode \; send-key /
